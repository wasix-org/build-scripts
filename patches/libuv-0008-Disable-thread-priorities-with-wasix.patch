From d3af68cedf930e39e8d1f463f5dc3ac21519627e Mon Sep 17 00:00:00 2001
From: Arshia Ghafoori <arshia001@live.com>
Date: Tue, 8 Jul 2025 11:02:16 +0200
Subject: [PATCH 8/9] Disable thread priorities with wasix

---
 src/unix/core.c | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/src/unix/core.c b/src/unix/core.c
index bd70442a..edae39d4 100644
--- a/src/unix/core.c
+++ b/src/unix/core.c
@@ -715,7 +715,6 @@ int uv__cloexec(int fd, int set) {
   return 0;
 }
 
-
 ssize_t uv__recvmsg(int fd, struct msghdr* msg, int flags) {
 #if defined(__ANDROID__)   || \
     defined(__DragonFly__) || \
@@ -1612,6 +1611,7 @@ int uv_cpumask_size(void) {
 }
 
 int uv_os_getpriority(uv_pid_t pid, int* priority) {
+#ifndef __wasi__ /* WASIX does not yet support priority */
   int r;
 
   if (priority == NULL)
@@ -1624,16 +1624,21 @@ int uv_os_getpriority(uv_pid_t pid, int* priority) {
     return UV__ERR(errno);
 
   *priority = r;
+#else
+  *priority = 0;
+#endif
   return 0;
 }
 
 
 int uv_os_setpriority(uv_pid_t pid, int priority) {
+#ifndef __wasi__ /* WASIX does not yet support priority */
   if (priority < UV_PRIORITY_HIGHEST || priority > UV_PRIORITY_LOW)
     return UV_EINVAL;
 
   if (setpriority(PRIO_PROCESS, (int) pid, priority) != 0)
     return UV__ERR(errno);
+#endif
 
   return 0;
 }
@@ -1645,6 +1650,7 @@ int uv_os_setpriority(uv_pid_t pid, int priority) {
  * So the output parameter priority is actually the nice value.
 */
 int uv_thread_getpriority(uv_thread_t tid, int* priority) {
+#ifndef __wasi__
   int r;
   int policy;
   struct sched_param param;
@@ -1671,6 +1677,11 @@ int uv_thread_getpriority(uv_thread_t tid, int* priority) {
 #endif
 
   *priority = param.sched_priority;
+#else
+  // WASIX does not yet support thread priority
+  *priority = 0;
+#endif
+
   return 0;
 }
 
@@ -1696,7 +1707,7 @@ static int set_nice_for_calling_thread(int priority) {
  * If the function fails, the return value is non-zero.
 */
 int uv_thread_setpriority(uv_thread_t tid, int priority) {
-#if !defined(__GNU__)
+#if !defined(__GNU__) && !defined(__wasi__) /* WASIX does not yet support thread priority */
   int r;
   int min;
   int max;
-- 
2.48.1

